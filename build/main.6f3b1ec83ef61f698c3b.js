(()=>{"use strict";class e{constructor(e,t,r){this._name=e.name,this._link=e.link,this._templateSelector=t,this._handleOpenPopup=r}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}_setData(){this._cardImage=this._element.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardName=this._element.querySelector(".card__title"),this._cardName.textContent=this._name}_deleteCard(){this._element.remove(),this._element=null}_likeCard(){this._like=this._element.querySelector(".card__like"),this._like.classList.toggle("card__like_active")}_setEventListeners(){this._deleteButton=this._element.querySelector(".card__delete"),this._deleteButton.addEventListener("click",(()=>{this._deleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleOpenPopup(this._name,this._link)})),this._cardLike=this._element.querySelector(".card__like"),this._cardLike.addEventListener("click",(()=>{this._likeCard()}))}generateCard(){return this._element=this._getTemplate(),this._setData(),this._setEventListeners(),this._element}}class t{constructor(e,t){this._config=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}_showError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._config.inputErrorClass),t.classList.add(this._config.errorClass),t.textContent=e.validationMessage}_hideError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideError(e):this._showError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}setButtonState(){this._toggleButtonState()}setInputValidity(){this._inputList.forEach((e=>{this._checkInputValidity(e)}))}setState(){this._toggleButtonState(),this.setInputValidity()}enableValidation(){this._setEventListeners()}}const r=document.querySelectorAll(".popup__close"),n=document.querySelector("#button_edit"),s=document.querySelector("#popup_edit"),i=document.querySelector("#button_add"),o=document.querySelector("#popup_add"),a=document.querySelectorAll(".popup"),l=document.querySelector("#cardsAddForm"),d=document.querySelector("#profileEditForm"),c=document.querySelector(".places"),u=document.querySelector("#name"),_=document.querySelector("#about-person"),p=document.querySelector(".profile__title"),m=document.querySelector(".profile__subtitle"),h=document.querySelector(".popup__image"),v=document.querySelector(".popup__title"),y=document.querySelector("#popup_photo"),S=document.querySelector("#photo-link"),g={name:document.querySelector("#photo-name").value,link:S.value},k={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_visible"};class E{constructor({items:e,renderer:t},r){this._renderedItems=e,this._renderer=t,this._container=r}addItem(e){this._container.prepend(e)}renderItems(){this._renderedItems.forEach((e=>{this._renderer(e)}))}renderNewCard(e){return e.preventDefault(),this._renderer(this._renderedItems)}}const f=new E({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:t=>{const r=new e(t,"#card-template",I).generateCard();f.addItem(r)}},c),L=new E({items:g,renderer:t=>{const r=new e(t,"#card-template",I).generateCard();L.addItem(r)}},c),q=e=>{e.classList.add("popup_opened"),document.addEventListener("keydown",b)},C=e=>{e.classList.remove("popup_opened"),document.removeEventListener("keydown",b)},b=e=>{if("Escape"===e.key){const e=document.querySelector(".popup_opened");C(e)}};r.forEach((e=>{const t=e.closest(".popup");e.addEventListener("click",(()=>C(t)))})),a.forEach((e=>{e.addEventListener("mousedown",(t=>{t.target===e&&C(e)}))}));const I=(e,t)=>{h.src=t,h.alt=e,v.textContent=e,q(y)},x=new t(k,l);x.enableValidation();const B=new t(k,d);B.enableValidation(),n.addEventListener("click",(e=>{e.preventDefault(),q(s),u.value=p.textContent,_.value=m.textContent,B.setState()})),i.addEventListener("click",(e=>{e.preventDefault(),q(o),l.reset(),x.setButtonState()})),l.addEventListener("submit",L.renderNewCard),d.addEventListener("submit",(e=>{e.preventDefault();const t=u.value,r=_.value;p.textContent=t,m.textContent=r,C(s)})),f.renderItems()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,